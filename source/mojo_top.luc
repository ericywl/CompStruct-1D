global Color {
    const RED = h00FF00;
    const GREEN = h0000FF;
    const BLUE = hFF0000;
    const WHITE = hFFFFFF;
    const BLACK = h000000;
}

module mojo_top (
        input clk,                  // 50MHz clock
        output led [8],             // 8 user controllable LEDs
        output spi_miso,            // AVR SPI MISO
        output spi_channel [4],     // AVR general purpose pins (used by default to select ADC channel)
        output avr_rx,              // AVR RX (FPGA TX)
        output led_data,
        input io_dip [3][8],
        input io_button[5]
    ) {
    
    sig rst;                        // reset signal
    const ROW_SIZE = 5;
    
    .clk(clk) {
        // The reset conditioner is used to synchronize the reset signal to the FPGA
        // clock. This ensures the entire FPGA comes out of reset at the same time.
        .rst(rst) {
            control ctl(#SIZE(ROW_SIZE));
            led_lib lib(#SIZE(ROW_SIZE));
            // control_man ctrl_man(#SIZE(ROW_SIZE));
        }
    }
    
    always {
        led = 8h00;                 // turn LEDs off
        spi_miso = bz;              // not using SPI
        spi_channel = bzzzz;        // not using flags
        avr_rx = bz;                // not using serial port
        
        ctl.start = io_dip[2][7];
        ctl.button = io_button[0];
        ctl.start_color = c{Color.BLUE, Color.BLUE, Color.BLUE, Color.BLUE, Color.BLACK};
    
        lib.colors = ctl.colors_out;
        led_data = lib.dataOut;
    }
}