global Color {
    const RED = h00DD00;
    const GREEN = h0000DD;
    const BLUE = hDD0000;
    const WHITE = hDDDDDD;
    const BLACK = h000000;
}

module mojo_top (
        input clk,                  // 50MHz clock
        input rst_n,
        input io_dip [3][8],
        input io_button[5],
        output led [8],             // 8 user controllable LEDs
        output spi_miso,            // AVR SPI MISO
        output spi_channel [4],     // AVR general purpose pins (used by default to select ADC channel)
        output avr_rx,              // AVR RX (FPGA TX)
        output led_data[3]
    ) {
  
    sig rst;    // reset signal
    
    // led_matrix_test and check_size are hardcoded, 
    // need to change if these constants change
    const COLUMNS = 5;
    const ROWS = 3;
    
    .clk(clk) {
        reset_conditioner reset_cond;
        .rst(rst) {
            // control_man ctl_man(#COLUMNS(COLUMNS), #ROWS(ROWS), .start(io_button[0]), .button(io_button[1]));
            // led_matrix led_matrix(#COLUMNS(COLUMNS), #ROWS(ROWS));
            led_matrix_test led_matrix(#COLUMNS(COLUMNS), #ROWS(ROWS));
            control_man_stage1 ctl_man1(#COLUMNS(COLUMNS), #ROWS(ROWS), .start(io_button[0]), .button(io_button[1]));
            control_man_stage2 ctl_man2(#COLUMNS(COLUMNS), #ROWS(ROWS), .start(io_button[0]), .button(io_button[1]));
            control_man_stage3 ctl_man3(#COLUMNS(COLUMNS), #ROWS(ROWS), .start(io_button[0]), .button(io_button[1]));
      
            fsm game_state = {START, STAGE1, STAGE2, STAGE3, END};
            dff color[24];
        }
    }
    
    always {
        reset_cond.in = ~rst_n;
        rst = reset_cond.out;
    
        led = 8h00;                 // turn LEDs off
        spi_miso = bz;              // not using SPI
        spi_channel = bzzzz;        // not using flags
        avr_rx = bz;                // not using serial port
    
        led_matrix.color = color.q;
        led_matrix.array = ctl_man1.matrix;
        led_data = led_matrix.led_data;
    
        case(game_state.q) {
            game_state.START:
                // start of game
                color.d = Color.BLACK;
        
            game_state.STAGE1:
                // stage 1
                color.d = Color.GREEN;
        
            game_state.STAGE2:
                // stage2
                color.d = Color.BLUE;
        
            game_state.STAGE3:
                // stage3
                color.d = Color.RED;
        }
    }
}