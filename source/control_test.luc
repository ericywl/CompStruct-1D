module control_test #(
        SIZE = 5 : SIZE > 0
    )(
        input clk,    // clock
        input rst,    // reset
        input start,
        input button,
        input start_row[SIZE],    
        output colors_out[SIZE],
        output stop
    ) {
    
    .clk(clk) {
        .rst(rst){
            fsm state = {START, SHL, SHR};
            fsm buttonstate = {UNPRESSED, PRESSED};
            dff timer[25];
            dff temp[SIZE];
            dff stop_signal;
            dff shifting;
        }
    }
    
    always {
        timer.d = timer.q + 1;
        stop = stop_signal.q;
        colors_out = temp.q;
        
        if (button && shifting.q) {
            buttonstate.d = buttonstate.PRESSED;
            stop_signal.d = b1;
        }
        
        case (buttonstate.q) {
            buttonstate.UNPRESSED:
                if (timer.q == 25x{1}) {     
                    case(state.q) {
                        state.START:
                            if (start) {
                                temp.d = start_row;
                                state.d = state.SHL;
                                shifting.d = b1;
                            }
                            
                        state.SHL:
                            temp.d = temp.q << 1;
                            if (temp.q[SIZE - 1]) {
                                temp.d = temp.q >> 1;
                                state.d = state.SHR;
                            }
                            
                        state.SHR:
                            temp.d = temp.q >> 1;
                            if (temp.q[0]) {
                                temp.d = temp.q << 1;
                                state.d = state.SHL;
                            }    
                    }
                }
                
        buttonstate.PRESSED:
            temp.d = temp.q;
            stop_signal.d = b1;
        }
    }
}